{"version":3,"file":"static/js/591.e3213c3c.chunk.js","mappings":"sKACA,MAAyB,uB,kBCqBzB,EAnBe,WACb,OACE,gBAAKA,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,eACVC,eAAe,UACfC,YAAa,EACbC,qBAAsB,KAI7B,C,0MClBKC,EAAiB,mCAAG,WAAMC,GAAN,yFACDC,MAAM,GAAD,OACvBC,EAAAA,GADuB,kBACJF,EADI,oBACeG,EAAAA,KAFnB,cAClBC,EADkB,gBAILA,EAASC,OAJJ,cAIlBC,EAJkB,yBAKjBA,GALiB,2CAAH,sDAOvB,ICRA,EAAmC,kC,kBCK7BC,EACK,UADLA,EAEM,WAFNA,EAGM,WAyDZ,EAvDgB,WACd,IAAQP,GAAYQ,EAAAA,EAAAA,MAAZR,QACR,GAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,UAAS,MAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,IAfAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,6GAEyBjB,EAAkBC,GAF3C,OAEUiB,EAFV,OAGIJ,EAAWI,GACXN,EAAUJ,GAJd,gDAMIQ,EAAS,EAAD,IACRJ,EAAUJ,GAPd,0DAFc,sBACdI,EAAUJ,GADI,mCAYdW,EACD,GAAE,CAAClB,IAEW,YAAXU,EACF,OAAO,SAACS,EAAA,EAAD,IAET,GAAe,aAAXT,EACF,OACE,iCACE,kEACA,mCAAWI,EAAMM,cAKvB,GAAe,aAAXV,EAAuB,CACzB,IAAQW,EAA2BT,EAA3BS,QACR,OADmCT,EAAlBU,eAKf,gBAAKnC,UAAWC,EAAhB,SACGiC,EAAQE,KAAI,SAAAC,GACX,IAAQC,EAAoBD,EAApBC,OAAQC,EAAYF,EAAZE,QAChB,OACE,iBAAKvC,UAAU,cAAf,WACE,0BACG,WADH,IACgBsC,MAEhB,uBAAIC,MAJ4BD,EAOrC,OAdI,yEAiBV,CACF,C,+HCjEM,IAAMvB,EAAY,+BACZyB,EAAM,mCACNxB,EAAU,IAAIyB,gBAAgB,CACzCC,QAASF,IAEEG,EAAkB,kC","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.js","services/FetchMovieReviews.js","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.js","constants/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import css from './Loader.module.css';\nimport { Oval } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div className={css.loader}>\n      <Oval\n        height=\"30\"\n        width=\"30\"\n        color=\"#3f51b5\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#8890bc\"\n        strokeWidth={7}\n        strokeWidthSecondary={7}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { options, BASIC_URL } from '../constants';\n\nconst FetchMovieReviews = async movieId => {\n  const response = await fetch(\n    `${BASIC_URL}/movie/${movieId}/reviews?${options}`\n  );\n  const data = await response.json();\n  return data;\n};\nexport default FetchMovieReviews;\n","// extracted by mini-css-extract-plugin\nexport default {\"review-container\":\"Reviews_review-container__zBTWE\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport FetchMovieReviews from 'services/FetchMovieReviews';\nimport css from './Reviews.module.css';\nimport Loader from 'components/Loader';\n\nconst Status = {\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [status, setStatus] = useState('');\n  const [reviews, setReviews] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    async function getMovieReview() {\n      try {\n        const result = await FetchMovieReviews(movieId);\n        setReviews(result);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        setError(error);\n        setStatus(Status.REJECTED);\n      }\n    }\n    getMovieReview();\n  }, [movieId]);\n\n  if (status === 'pending') {\n    return <Loader />;\n  }\n  if (status === 'rejected') {\n    return (\n      <>\n        <div>An error occured, please try again.</div>\n        <div>Error{error.message}</div>\n      </>\n    );\n  }\n\n  if (status === 'resolved') {\n    const { results, total_results } = reviews;\n    if (!total_results) {\n      return <div>We don't have any reviews for this movie yet</div>;\n    }\n    return (\n      <div className={css['review-container']}>\n        {results.map(review => {\n          const { author, content } = review;\n          return (\n            <div className=\"review-item\" key={author}>\n              <h3>\n                {'Author: '} {author}\n              </h3>\n              <p>{content}</p>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n};\nexport default Reviews;\n","export const BASIC_URL = 'https://api.themoviedb.org/3';\nexport const KEY = '0f13d416e0a5bec252569942d7aded53';\nexport const options = new URLSearchParams({\n  api_key: KEY,\n});\nexport const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n"],"names":["className","css","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","FetchMovieReviews","movieId","fetch","BASIC_URL","options","response","json","data","Status","useParams","useState","status","setStatus","reviews","setReviews","error","setError","useEffect","result","getMovieReview","Loader","message","results","total_results","map","review","author","content","KEY","URLSearchParams","api_key","IMAGES_BASE_URL"],"sourceRoot":""}