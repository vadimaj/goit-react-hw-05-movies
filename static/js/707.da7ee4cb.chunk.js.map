{"version":3,"file":"static/js/707.da7ee4cb.chunk.js","mappings":"sKACA,MAAyB,uB,kBCqBzB,EAnBe,WACb,OACE,gBAAKA,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,eACVC,eAAe,UACfC,YAAa,EACbC,qBAAsB,KAI7B,C,mMCpBM,IAAMC,EAAY,+BACZC,EAAM,mCACNC,EAAU,IAAIC,gBAAgB,CACzCC,QAASH,IAEEI,EAAkB,kC,8ICHzBC,EAAiB,mCAAG,WAAMC,GAAN,yFACDC,MAAM,GAAD,OAAIR,EAAAA,GAAJ,kBAAuBO,EAAvB,YAAkCL,EAAAA,KADtC,cAClBO,EADkB,gBAELA,EAASC,OAFJ,cAElBC,EAFkB,yBAIjBA,GAJiB,2CAAH,sDAMvB,ICPA,GAAgB,MAAQ,4BAA4B,aAAa,iCAAiC,aAAa,kC,iFCOzGC,EACK,UADLA,EAEM,WAFNA,EAGM,WAkFZ,EA/EqB,WAAO,IAAD,IACjBL,GAAYM,EAAAA,EAAAA,MAAZN,QACR,GAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAiBnD,IAfAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,6GAEyBrB,EAAkBC,GAF3C,OAEUqB,EAFV,OAGIV,EAASU,GACTZ,EAAUJ,GAJd,gDAMIQ,EAAS,EAAD,IACRJ,EAAUJ,GAPd,0DAFc,sBACdI,EAAUJ,GADI,mCAYdiB,EACD,GAAE,CAACtB,IAEW,YAAXQ,EACF,OAAO,SAACe,EAAA,EAAD,IAET,GAAe,aAAXf,EACF,OACE,iCACE,kEACA,mCAAWI,EAAMY,cAIvB,GAAe,aAAXhB,EAAuB,CACzB,IAAQiB,EACNf,EADMe,MAAOC,EACbhB,EADagB,YAAaC,EAC1BjB,EAD0BiB,SAAUC,EACpClB,EADoCkB,OAAQC,EAC5CnB,EAD4CmB,aAAcC,EAC1DpB,EAD0DoB,aAE5D,OACE,qBAASjD,UAAWC,EAAAA,MAApB,WACE,SAAC,KAAD,CAAMiD,GAAIf,EAAYgB,QAASnD,UAAWC,EAAAA,cAA1C,sBAGA,iBAAKD,UAAWC,EAAAA,cAAhB,WACE,gBACEmD,IAAKP,EAAc5B,EAAAA,GAAkB4B,EAAcQ,EACnDC,IAAKV,KAEP,iBAAK5C,UAAWC,EAAAA,cAAhB,WACE,wBAAK2C,EAAQ,KAAOI,EAAaO,MAAM,EAAG,GAAK,OAC/C,yBACG,eACAC,KAAKC,MAAqB,GAAfR,GACX,QAEH,uCACA,uBAAIH,KACJ,qCACA,wBACGC,EAAOW,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,GADA,aAMvB,mBACA,mDACA,SAAC,KAAD,CAAMX,GAAG,OAAT,mBACA,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,sBACA,mBACA,SAAC,EAAAY,SAAD,WACE,SAAC,KAAD,QAIP,CACF,C","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.js","constants/index.js","services/FetchMovieDetails.js","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import css from './Loader.module.css';\nimport { Oval } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div className={css.loader}>\n      <Oval\n        height=\"30\"\n        width=\"30\"\n        color=\"#3f51b5\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#8890bc\"\n        strokeWidth={7}\n        strokeWidthSecondary={7}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","export const BASIC_URL = 'https://api.themoviedb.org/3';\nexport const KEY = '0f13d416e0a5bec252569942d7aded53';\nexport const options = new URLSearchParams({\n  api_key: KEY,\n});\nexport const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n","import { options, BASIC_URL } from '../constants';\n\nconst FetchMovieDetails = async movieId => {\n  const response = await fetch(`${BASIC_URL}/movie/${movieId}?${options}`);\n  const data = await response.json();\n\n  return data;\n};\nexport default FetchMovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"movie\":\"MovieDetails_movie__9X7I7\",\"movie-wrap\":\"MovieDetails_movie-wrap__2751L\",\"movie-link\":\"MovieDetails_movie-link__7QbRg\"};","import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport FetchMovieDetails from 'services/FetchMovieDetails';\nimport { IMAGES_BASE_URL } from '../../constants';\nimport css from './MovieDetails.module.css';\nimport Loader from 'components/Loader';\nimport movieplaceholder from 'components/images/movieplaceholder.jpg';\n\nconst Status = {\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [status, setStatus] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n\n  const linkBackRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    async function getMovieDetails() {\n      try {\n        const result = await FetchMovieDetails(movieId);\n        setMovie(result);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        setError(error);\n        setStatus(Status.REJECTED);\n      }\n    }\n    getMovieDetails();\n  }, [movieId]);\n\n  if (status === 'pending') {\n    return <Loader />;\n  }\n  if (status === 'rejected') {\n    return (\n      <>\n        <div>An error occured, please try again.</div>\n        <div>Error{error.message}</div>\n      </>\n    );\n  }\n  if (status === 'resolved') {\n    const { title, poster_path, overview, genres, release_date, vote_average } =\n      movie;\n    return (\n      <section className={css.movie}>\n        <Link to={linkBackRef.current} className={css['movie-link']}>\n          Go back\n        </Link>\n        <div className={css['movie-wrap']}>\n          <img\n            src={poster_path ? IMAGES_BASE_URL + poster_path : movieplaceholder}\n            alt={title}\n          />\n          <div className={css['movie-info']}>\n            <h2>{title + ' (' + release_date.slice(0, 4) + ')'}</h2>\n            <p>\n              {'User score: '}\n              {Math.floor(vote_average * 10)}\n              {'%'}\n            </p>\n            <h3>Overview:</h3>\n            <p>{overview}</p>\n            <h3>Genres:</h3>\n            <ul>\n              {genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        <hr />\n        <p>Additional information</p>\n        <Link to=\"cast\">Cast</Link>\n        <br></br>\n        <Link to=\"reviews\">Reviews</Link>\n        <hr />\n        <Suspense>\n          <Outlet />\n        </Suspense>\n      </section>\n    );\n  }\n};\nexport default MovieDetails;\n"],"names":["className","css","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","BASIC_URL","KEY","options","URLSearchParams","api_key","IMAGES_BASE_URL","FetchMovieDetails","movieId","fetch","response","json","data","Status","useParams","useState","status","setStatus","movie","setMovie","error","setError","location","useLocation","linkBackRef","useRef","state","from","useEffect","result","getMovieDetails","Loader","message","title","poster_path","overview","genres","release_date","vote_average","to","current","src","movieplaceholder","alt","slice","Math","floor","map","genre","name","id","Suspense"],"sourceRoot":""}