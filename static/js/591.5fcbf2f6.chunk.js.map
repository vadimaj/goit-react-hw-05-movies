{"version":3,"file":"static/js/591.5fcbf2f6.chunk.js","mappings":"sPAEMA,EAAiB,mCAAG,WAAMC,GAAN,yFACDC,MAAM,GAAD,OACvBC,EAAAA,GADuB,kBACJF,EADI,oBACeG,EAAAA,KAFnB,cAClBC,EADkB,gBAILA,EAASC,OAJJ,cAIlBC,EAJkB,yBAKjBA,GALiB,2CAAH,sDAOvB,ICRA,EAAmC,kC,SCI7BC,EACK,UADLA,EAEM,WAFNA,EAGM,WAyDZ,EAvDgB,WACd,IAAQP,GAAYQ,EAAAA,EAAAA,MAAZR,QACR,GAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,UAAS,MAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,IAfAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,6GAEyBjB,EAAkBC,GAF3C,OAEUiB,EAFV,OAGIJ,EAAWI,GACXN,EAAUJ,GAJd,gDAMIQ,EAAS,EAAD,IACRJ,EAAUJ,GAPd,0DAFc,sBACdI,EAAUJ,GADI,mCAYdW,EACD,GAAE,CAAClB,IAEW,YAAXU,EACF,OAAO,wCAET,GAAe,aAAXA,EACF,OACE,iCACE,kEACA,mCAAWI,EAAMK,cAKvB,GAAe,aAAXT,EAAuB,CACzB,IAAQU,EAA2BR,EAA3BQ,QACR,OADmCR,EAAlBS,eAKf,gBAAKC,UAAWC,EAAhB,SACGH,EAAQI,KAAI,SAAAC,GACX,IAAQC,EAAoBD,EAApBC,OAAQC,EAAYF,EAAZE,QAChB,OACE,iBAAKL,UAAU,cAAf,WACE,0BACG,WADH,IACgBI,MAEhB,uBAAIC,MAGT,OAdI,yEAiBV,CACF,C,+HChEM,IAAMzB,EAAY,+BACZ0B,EAAM,mCACNzB,EAAU,IAAI0B,gBAAgB,CACzCC,QAASF,IAEEG,EAAkB,kC,sBCL/B,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAO3B,GAEP,YADAqB,EAAOrB,EAET,CAEI0B,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["services/FetchMovieReviews.js","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.js","constants/index.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { options, BASIC_URL } from '../constants';\n\nconst FetchMovieReviews = async movieId => {\n  const response = await fetch(\n    `${BASIC_URL}/movie/${movieId}/reviews?${options}`\n  );\n  const data = await response.json();\n  return data;\n};\nexport default FetchMovieReviews;\n","// extracted by mini-css-extract-plugin\nexport default {\"review-container\":\"Reviews_review-container__zBTWE\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport FetchMovieReviews from 'services/FetchMovieReviews';\nimport css from './Reviews.module.css';\n\nconst Status = {\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [status, setStatus] = useState('');\n  const [reviews, setReviews] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    async function getMovieReview() {\n      try {\n        const result = await FetchMovieReviews(movieId);\n        setReviews(result);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        setError(error);\n        setStatus(Status.REJECTED);\n      }\n    }\n    getMovieReview();\n  }, [movieId]);\n\n  if (status === 'pending') {\n    return <div>Loading...</div>;\n  }\n  if (status === 'rejected') {\n    return (\n      <>\n        <div>An error occured, please try again.</div>\n        <div>Error{error.message}</div>\n      </>\n    );\n  }\n\n  if (status === 'resolved') {\n    const { results, total_results } = reviews;\n    if (!total_results) {\n      return <div>We don't have any reviews for this movie yet</div>;\n    }\n    return (\n      <div className={css['review-container']}>\n        {results.map(review => {\n          const { author, content } = review;\n          return (\n            <div className=\"review-item\">\n              <h3>\n                {'Author: '} {author}\n              </h3>\n              <p>{content}</p>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n};\nexport default Reviews;\n","export const BASIC_URL = 'https://api.themoviedb.org/3';\nexport const KEY = '0f13d416e0a5bec252569942d7aded53';\nexport const options = new URLSearchParams({\n  api_key: KEY,\n});\nexport const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["FetchMovieReviews","movieId","fetch","BASIC_URL","options","response","json","data","Status","useParams","useState","status","setStatus","reviews","setReviews","error","setError","useEffect","result","getMovieReview","message","results","total_results","className","css","map","review","author","content","KEY","URLSearchParams","api_key","IMAGES_BASE_URL","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}