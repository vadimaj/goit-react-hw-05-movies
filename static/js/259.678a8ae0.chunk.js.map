{"version":3,"file":"static/js/259.678a8ae0.chunk.js","mappings":"sKACA,MAAyB,uB,kBCqBzB,EAnBe,WACb,OACE,gBAAKA,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,eACVC,eAAe,UACfC,YAAa,EACbC,qBAAsB,KAI7B,C,wHCCD,IAjBkB,SAAAC,GAChB,IAAQC,EAAWD,EAAXC,OAEFC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIf,UAAU,SAAd,SACGa,EAAOG,KAAI,SAAAC,GACV,IAAQC,EAA8BD,EAA9BC,GAAIC,EAA0BF,EAA1BE,MAAOC,EAAmBH,EAAnBG,eACnB,OACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMT,GAA1C,UACE,+BAAKK,QAAL,IAAKA,EAAAA,EAASC,KAD2CF,EAI9D,KAGN,C,+HCpBM,IAAMM,EAAY,+BACZC,EAAM,mCACNC,EAAU,IAAIC,gBAAgB,CACzCC,QAASH,IAEEI,EAAkB,kC,+ICHzBC,EAAmB,mCAAG,sGACHC,MAAM,GAAD,OAAIP,EAAAA,GAAJ,+BAAoCE,EAAAA,KADtC,cACpBM,EADoB,gBAEPA,EAASC,OAFF,cAEpBC,EAFoB,yBAGnBA,GAHmB,2CAAH,qDAKzB,I,kBCFMC,EACK,UADLA,EAEM,WAFNA,EAGM,WA6CZ,EA1Ca,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOvB,EAAP,KAAewB,EAAf,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,6GAEgCZ,IAFhC,OAEUa,EAFV,OAGIN,GAAU,SAAAO,GAAS,wBAAQA,IAAR,OAAsBD,EAAcE,SAApC,IACnBN,EAAUJ,GAJd,gDAMIM,EAAS,EAAD,IACRF,EAAUJ,GAPd,0DAHc,sBACdI,EAAUJ,GADI,mCAadW,EACD,GAAE,IAEY,YAAXR,GACK,SAACS,EAAA,EAAD,IAEM,aAAXT,GAEA,iCACE,kEACA,mCAAWE,EAAMQ,cAIR,aAAXV,GAEA,qBAAStC,UAAU,UAAnB,WACE,4CACA,SAACiD,EAAA,EAAD,CAAWpC,OAAQA,YAJzB,CAQD,C","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.js","components/MovieList/MovieList.js","constants/index.js","services/FetchTrendingMovies.js","pages/Home/Home.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import css from './Loader.module.css';\nimport { Oval } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div className={css.loader}>\n      <Oval\n        height=\"30\"\n        width=\"30\"\n        color=\"#3f51b5\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#8890bc\"\n        strokeWidth={7}\n        strokeWidthSecondary={7}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nconst MovieList = props => {\n  const { movies } = props;\n\n  const location = useLocation();\n  return (\n    <ul className=\"movies\">\n      {movies.map(movie => {\n        const { id, title, original_title } = movie;\n        return (\n          <Link to={`/movies/${id}`} state={{ from: location }} key={id}>\n            <li>{title ?? original_title}</li>\n          </Link>\n        );\n      })}\n    </ul>\n  );\n};\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","export const BASIC_URL = 'https://api.themoviedb.org/3';\nexport const KEY = '0f13d416e0a5bec252569942d7aded53';\nexport const options = new URLSearchParams({\n  api_key: KEY,\n});\nexport const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n","import { options, BASIC_URL } from '../constants';\n\nconst FetchTrendingMovies = async () => {\n  const response = await fetch(`${BASIC_URL}/trending/movie/day?${options}`);\n  const data = await response.json();\n  return data;\n};\nexport default FetchTrendingMovies;\n","import MovieList from 'components/MovieList/MovieList';\nimport { useState, useEffect } from 'react';\nimport FetchTrendingMovies from 'services/FetchTrendingMovies';\nimport Loader from 'components/Loader';\n\nconst Status = {\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n\n    async function getMovies() {\n      try {\n        const fetchResponse = await FetchTrendingMovies();\n        setMovies(prevState => [...prevState, ...fetchResponse.results]);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        setError(error);\n        setStatus(Status.REJECTED);\n      }\n    }\n    getMovies();\n  }, []);\n\n  if (status === 'pending') {\n    return <Loader />;\n  }\n  if (status === 'rejected') {\n    return (\n      <>\n        <div>An error occured, please try again.</div>\n        <div>Error{error.message}</div>\n      </>\n    );\n  }\n  if (status === 'resolved') {\n    return (\n      <section className=\"section\">\n        <h3>Trending today</h3>\n        <MovieList movies={movies} />\n      </section>\n    );\n  }\n};\n\nexport default Home;\n"],"names":["className","css","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","props","movies","location","useLocation","map","movie","id","title","original_title","to","state","from","BASIC_URL","KEY","options","URLSearchParams","api_key","IMAGES_BASE_URL","FetchTrendingMovies","fetch","response","json","data","Status","useState","setMovies","status","setStatus","error","setError","useEffect","fetchResponse","prevState","results","getMovies","Loader","message","MovieList"],"sourceRoot":""}