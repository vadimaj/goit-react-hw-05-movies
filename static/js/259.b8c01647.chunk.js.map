{"version":3,"file":"static/js/259.b8c01647.chunk.js","mappings":"oKAwBA,IApBkB,SAAAA,GAChB,IAAQC,EAAWD,EAAXC,OACRC,QAAQC,IAAIF,GACZ,IAAMG,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAU,SAAd,SACGL,EAAOM,KAAI,SAAAC,GACV,OACE,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMR,GAFjB,UAKE,wBAAKI,EAAMK,SAFNL,EAAME,GAKhB,KAGN,C,+HCvBM,IAAMI,EAAY,+BACZC,EAAM,mCACNC,EAAU,IAAIC,gBAAgB,CACzCC,QAASH,IAEEI,EAAkB,kC,+ICHzBC,EAAmB,mCAAG,sGACHC,MAAM,GAAD,OAAIP,EAAAA,GAAJ,+BAAoCE,EAAAA,KADtC,cACpBM,EADoB,gBAEPA,EAASC,OAFF,cAEpBC,EAFoB,yBAGnBA,GAHmB,2CAAH,qDAKzB,I,SCFMC,EACK,UADLA,EAEM,WAFNA,EAGM,WA6CZ,EA1Ca,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOzB,EAAP,KAAe0B,EAAf,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,6GAEgCZ,IAFhC,OAEUa,EAFV,OAGIN,GAAU,SAAAO,GAAS,wBAAQA,IAAR,OAAsBD,EAAcE,SAApC,IACnBN,EAAUJ,GAJd,gDAMIM,EAAS,EAAD,IACRF,EAAUJ,GAPd,0DAHc,sBACdI,EAAUJ,GADI,mCAadW,EACD,GAAE,IAEY,YAAXR,GACK,wCAEM,aAAXA,GAEA,iCACE,kEACA,mCAAWE,EAAMO,cAIR,aAAXT,GAEA,qBAAStB,UAAU,UAAnB,WACE,4CACA,SAACgC,EAAA,EAAD,CAAWrC,OAAQA,YAJzB,CAQD,C,sBCnDD,SAASsC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOlB,GAEP,YADAY,EAAOZ,EAET,CAEIiB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/MovieList/MovieList.js","constants/index.js","services/FetchTrendingMovies.js","pages/Home/Home.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nconst MovieList = props => {\n  const { movies } = props;\n  console.log(movies);\n  const location = useLocation();\n  return (\n    <ul className=\"movies\">\n      {movies.map(movie => {\n        return (\n          <Link\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n            key={movie.id}\n          >\n            <li>{movie.title}</li>\n          </Link>\n        );\n      })}\n    </ul>\n  );\n};\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","export const BASIC_URL = 'https://api.themoviedb.org/3';\nexport const KEY = '0f13d416e0a5bec252569942d7aded53';\nexport const options = new URLSearchParams({\n  api_key: KEY,\n});\nexport const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n","import { options, BASIC_URL } from '../constants';\n\nconst FetchTrendingMovies = async () => {\n  const response = await fetch(`${BASIC_URL}/trending/movie/day?${options}`);\n  const data = await response.json();\n  return data;\n};\nexport default FetchTrendingMovies;\n","import MovieList from 'components/MovieList/MovieList';\nimport { useState, useEffect } from 'react';\n//import { Link } from 'react-router-dom';\nimport FetchTrendingMovies from 'services/FetchTrendingMovies';\n\nconst Status = {\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n\n    async function getMovies() {\n      try {\n        const fetchResponse = await FetchTrendingMovies();\n        setMovies(prevState => [...prevState, ...fetchResponse.results]);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        setError(error);\n        setStatus(Status.REJECTED);\n      }\n    }\n    getMovies();\n  }, []);\n\n  if (status === 'pending') {\n    return <div>Loading...</div>;\n  }\n  if (status === 'rejected') {\n    return (\n      <>\n        <div>An error occured, please try again.</div>\n        <div>Error{error.message}</div>\n      </>\n    );\n  }\n  if (status === 'resolved') {\n    return (\n      <section className=\"section\">\n        <h3>Trending today</h3>\n        <MovieList movies={movies} />\n      </section>\n    );\n  }\n};\n\nexport default Home;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["props","movies","console","log","location","useLocation","className","map","movie","to","id","state","from","title","BASIC_URL","KEY","options","URLSearchParams","api_key","IMAGES_BASE_URL","FetchTrendingMovies","fetch","response","json","data","Status","useState","setMovies","status","setStatus","error","setError","useEffect","fetchResponse","prevState","results","getMovies","message","MovieList","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}