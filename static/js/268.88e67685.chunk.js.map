{"version":3,"file":"static/js/268.88e67685.chunk.js","mappings":"sPAEMA,EAAc,mCAAG,WAAMC,GAAN,yFACEC,MAAM,GAAD,OACvBC,EAAAA,GADuB,kBACJF,EADI,oBACeG,EAAAA,KAFtB,cACfC,EADe,gBAIFA,EAASC,OAJP,cAIfC,EAJe,yBAKdA,GALc,2CAAH,sDAOpB,ICRA,EAAiC,6BAAjC,EAA2E,yB,kBCOrEC,EACK,UADLA,EAEM,WAFNA,EAGM,WA4DZ,EA1Da,WACX,IAAQP,GAAYQ,EAAAA,EAAAA,MAAZR,QACR,GAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,6GAEyBjB,EAAeC,GAFxC,OAEUiB,EAFV,OAGIJ,EAAQI,EAAOL,MACfD,EAAUJ,GAJd,gDAMIQ,EAAS,EAAD,IACRJ,EAAUJ,GAPd,0DAFc,sBACdI,EAAUJ,GADI,mCAYdW,EACD,GAAE,CAAClB,IAEW,YAAXU,GACK,SAACS,EAAA,EAAD,IAEM,aAAXT,GAEA,iCACE,kEACA,mCAAWI,EAAMM,cAIR,aAAXV,GAEA,gBAAKW,UAAWC,EAAhB,SACGV,EAAKW,KAAI,SAAAC,GACR,IAAQC,EAAsCD,EAAtCC,KAAMC,EAAgCF,EAAhCE,aAAcC,EAAkBH,EAAlBG,UAAWC,EAAOJ,EAAPI,GACvC,OACE,4BACE,gBACEC,IACEH,EACII,EAAAA,GAAkBJ,E,81MAGxBK,IAAKN,EACLJ,UAAWC,KAEb,wBAAKG,KACL,wCACA,uBAAIE,MAZIC,EAeb,WArBP,CAyBD,C,sDCrED,MAAyB,uB,kBCqBzB,EAnBe,WACb,OACE,gBAAKP,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEU,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,eACVC,eAAe,UACfC,YAAa,EACbC,qBAAsB,KAI7B,C,mMCpBM,IAAMvC,EAAY,+BACZwC,EAAM,mCACNvC,EAAU,IAAIwC,gBAAgB,CACzCC,QAASF,IAEEZ,EAAkB,kC","sources":["services/FetchMovieCast.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.js","constants/index.js"],"sourcesContent":["import { options, BASIC_URL } from '../constants';\n\nconst FetchMovieCast = async movieId => {\n  const response = await fetch(\n    `${BASIC_URL}/movie/${movieId}/credits?${options}`\n  );\n  const data = await response.json();\n  return data;\n};\nexport default FetchMovieCast;\n","// extracted by mini-css-extract-plugin\nexport default {\"cast-container\":\"Cast_cast-container__VofqV\",\"cast-image\":\"Cast_cast-image__Lf-J8\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport FetchMovieCast from 'services/FetchMovieCast';\nimport { IMAGES_BASE_URL } from '../../constants';\nimport css from './Cast.module.css';\nimport Loader from 'components/Loader';\nimport castplaceholder from 'components/images/castplaceholder.jpg';\n\nconst Status = {\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [status, setStatus] = useState('');\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    async function getMovieCredits() {\n      try {\n        const result = await FetchMovieCast(movieId);\n        setCast(result.cast);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        setError(error);\n        setStatus(Status.REJECTED);\n      }\n    }\n    getMovieCredits();\n  }, [movieId]);\n\n  if (status === 'pending') {\n    return <Loader />;\n  }\n  if (status === 'rejected') {\n    return (\n      <>\n        <div>An error occured, please try again.</div>\n        <div>Error{error.message}</div>\n      </>\n    );\n  }\n  if (status === 'resolved') {\n    return (\n      <div className={css['cast-container']}>\n        {cast.map(actor => {\n          const { name, profile_path, character, id } = actor;\n          return (\n            <div key={id}>\n              <img\n                src={\n                  profile_path\n                    ? IMAGES_BASE_URL + profile_path\n                    : castplaceholder\n                }\n                alt={name}\n                className={css['cast-image']}\n              />\n              <h3>{name}</h3>\n              <h3>Character:</h3>\n              <p>{character}</p>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n};\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import css from './Loader.module.css';\nimport { Oval } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div className={css.loader}>\n      <Oval\n        height=\"30\"\n        width=\"30\"\n        color=\"#3f51b5\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#8890bc\"\n        strokeWidth={7}\n        strokeWidthSecondary={7}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","export const BASIC_URL = 'https://api.themoviedb.org/3';\nexport const KEY = '0f13d416e0a5bec252569942d7aded53';\nexport const options = new URLSearchParams({\n  api_key: KEY,\n});\nexport const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n"],"names":["FetchMovieCast","movieId","fetch","BASIC_URL","options","response","json","data","Status","useParams","useState","status","setStatus","cast","setCast","error","setError","useEffect","result","getMovieCredits","Loader","message","className","css","map","actor","name","profile_path","character","id","src","IMAGES_BASE_URL","alt","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","KEY","URLSearchParams","api_key"],"sourceRoot":""}